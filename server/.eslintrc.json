{
	"$schema": "https://json.schemastore.org/eslintrc.json",
	"plugins": ["@typescript-eslint", "import"],
	"parserOptions": {
		"project": "tsconfig.json"
	},
	"extends": [
		"plugin:@typescript-eslint/recommended",
		"plugin:@typescript-eslint/recommended-requiring-type-checking",
		"plugin:import/recommended",
		"plugin:import/typescript",
		"prettier"
	],
	"rules": {
		"import/order": "error",
		"import/no-mutable-exports": "error",
		"import/no-cycle": "error",
		"import/no-default-export": "error",
		"@typescript-eslint/consistent-type-imports": [
			"error",
			{
				"prefer": "type-imports",
				"fixStyle": "inline-type-imports",
				"disallowTypeAnnotations": false
			}
		],
		"import/no-duplicates": [
			"error",
			{
				"prefer-inline": true
			}
		],
		"@typescript-eslint/ban-types": [
			"error",
			{
				"types": {
					"{}": false
				}
			}
		],
		"import/namespace": ["off"],
		"no-empty-pattern": "off",
		"@typescript-eslint/no-empty-interface": "off",
		"@typescript-eslint/no-empty-function": "off",
		"@typescript-eslint/require-await": "off",
		"@typescript-eslint/return-await": ["error", "in-try-catch"],
		"@typescript-eslint/no-unused-vars": [
			"error",
			{
				"argsIgnorePattern": "^_",
				"varsIgnorePattern": "^_"
			}
		],
		"@typescript-eslint/restrict-template-expressions": ["error"],
		"@typescript-eslint/no-misused-promises": [
			"error",
			{
				"checksVoidReturn": false
			}
		]
	},
	"settings": {
		"import/parsers": {
			"@typescript-eslint/parser": [".ts", ".tsx"]
		},
		"import/resolver": {
			"typescript": {
				"alwaysTryTypes": true,
				"project": "tsconfig.json"
			}
		}
	}
}
