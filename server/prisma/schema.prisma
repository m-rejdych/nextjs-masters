// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String       @id @default(uuid())
  name        String
  description String
  slug        String
  price       Int
  rating      Float?
  images      Image[]
  categories  Category[]
  collections Collection[]
  orderItems  OrderItem[]
  reviews     Review[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Image {
  id        String  @id @default(uuid())
  url       String
  alt       String
  productId String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Category {
  id          String    @id @default(uuid())
  name        String
  description String
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Collection {
  id          String    @id @default(uuid())
  name        String
  description String
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Review {
  id          String   @id @default(uuid())
  author      String
  email       String
  title       String
  description String
  rating      Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  productId   String
  product     Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Order {
  id        String      @id @default(uuid())
  total     Int
  status    OrderStatus
  items     OrderItem[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model OrderItem {
  id        String  @id @default(uuid())
  quantity  Int
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
}

enum OrderStatus {
  Cancelled
  Created
  Fulfilled
  Paid
}
