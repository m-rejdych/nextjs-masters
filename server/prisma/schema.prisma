// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String                 @id @default(uuid())
  name        String
  description String
  slug        String
  price       Int
  image       String
  categories  CategoriesOnProducts[]
  collections CollectionsOnPosts[]
  orderItems  OrderItem[]
  createdAt   DateTime               @default(now())
  updatedAt   DateTime               @updatedAt
}

model Category {
  id        String                 @id @default(uuid())
  name      String
  products  CategoriesOnProducts[]
  createdAt DateTime               @default(now())
  updatedAt DateTime               @updatedAt
}

model Collection {
  id        String               @id @default(uuid())
  name      String
  products  CollectionsOnPosts[]
  createdAt DateTime             @default(now())
  updatedAt DateTime             @updatedAt
}

model CategoriesOnProducts {
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId  String
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId String

  @@id([productId, categoryId])
}

model CollectionsOnPosts {
  product      Product    @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId    String
  collection   Collection @relation(fields: [collectionId], references: [id], onDelete: Cascade)
  collectionId String

  @@id([productId, collectionId])
}

model Order {
  id        String      @id @default(uuid())
  total     Int
  status    OrderStatus
  items     OrderItem[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model OrderItem {
  id        String  @id @default(uuid())
  quantity  Int
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
}

enum OrderStatus {
  Active
  Resolved
}
